// Generated by Dagger (https://dagger.dev).
package com.example.onlineshoppingapp.ui.product;

import android.app.Application;
import com.example.onlineshoppingapp.data.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailViewModel_Factory implements Factory<DetailViewModel> {
  private final Provider<Repository> repositoryProvider;

  private final Provider<Application> appProvider;

  public DetailViewModel_Factory(Provider<Repository> repositoryProvider,
      Provider<Application> appProvider) {
    this.repositoryProvider = repositoryProvider;
    this.appProvider = appProvider;
  }

  @Override
  public DetailViewModel get() {
    return newInstance(repositoryProvider.get(), appProvider.get());
  }

  public static DetailViewModel_Factory create(Provider<Repository> repositoryProvider,
      Provider<Application> appProvider) {
    return new DetailViewModel_Factory(repositoryProvider, appProvider);
  }

  public static DetailViewModel newInstance(Repository repository, Application app) {
    return new DetailViewModel(repository, app);
  }
}
